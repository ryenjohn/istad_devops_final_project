## Install services on each machine

---
- hosts: jenkins
  become: yes
  tasks:
    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Add Jenkins repository key
      apt_key:
        url: https://pkg.jenkins.io/debian/jenkins.io.key
        state: present

    - name: Add Jenkins repository
      apt_repository:
        repo: "deb https://pkg.jenkins.io/debian binary/"
        state: present

    - name: Install Java (required for Jenkins)
      apt:
        name: openjdk-17-jdk
        state: present

    - name: Install Jenkins
      apt:
        name: jenkins
        state: present
        update_cache: yes

    - name: Ensure Jenkins is enabled and started
      systemd:
        name: jenkins
        enabled: yes
        state: started


- hosts: nexus
  become: yes
  tasks:
    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install required dependencies
      apt:
        name:
          - curl
          - apt-transport-https
          - ca-certificates
          - software-properties-common
          - python3-pip
        state: present

    - name: Install Docker if not installed
      shell: curl -fsSL https://get.docker.com | sh
      args:
        creates: /usr/bin/docker

    - name: Install Docker SDK for Python
      pip:
        name: docker
        state: present

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Ensure Nexus data directory exists
      file:
        path: /opt/nexus-data
        state: directory
        owner: 200
        group: 200
        mode: '0755'

    - name: Deploy Nexus container
      docker_container:
        name: nexus
        image: sonatype/nexus3:latest
        state: started
        restart_policy: always
        published_ports:
          - "8081:8081"
        volumes:
          - /opt/nexus-data:/nexus-data


- hosts: sonarqube
  become: yes
  tasks:
    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install required dependencies
      apt:
        name:
          - curl
          - apt-transport-https
          - ca-certificates
          - software-properties-common
          - python3-pip
        state: present

    - name: Install Docker if not installed
      shell: curl -fsSL https://get.docker.com | sh
      args:
        creates: /usr/bin/docker

    - name: Install Docker SDK for Python
      pip:
        name: docker
        state: present

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Ensure SonarQube data directory exists
      file:
        path: /opt/sonarqube_data
        state: directory
        mode: '0755'

    - name: Ensure PostgreSQL data directory exists
      file:
        path: /opt/postgres_data
        state: directory
        mode: '0755'

    - name: Deploy PostgreSQL container
      docker_container:
        name: sonarqube_postgres
        image: postgres:13
        state: started
        restart_policy: always
        env:
          POSTGRES_USER: sonar
          POSTGRES_PASSWORD: sonar
          POSTGRES_DB: sonarqube
        volumes:
          - /opt/postgres_data:/var/lib/postgresql/data

    - name: Deploy SonarQube container
      docker_container:
        name: sonarqube
        image: sonarqube:latest
        state: started
        restart_policy: always
        published_ports:
          - "9000:9000"
        volumes:
          - /opt/sonarqube_data:/opt/sonarqube/data
        links:
          - "sonarqube_postgres:db"
        env:
          SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonarqube
          SONAR_JDBC_USERNAME: sonar
          SONAR_JDBC_PASSWORD: sonar